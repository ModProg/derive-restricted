error: derive-where doesn't support empty items, as this can already be handled by standard `#[derive(..)]`
 --> tests/ui/use_case.rs:4:1
  |
4 | struct StructEmpty {}
  | ^^^^^^^^^^^^^^^^^^^^^

error: derive-where doesn't support empty items, as this can already be handled by standard `#[derive(..)]`
 --> tests/ui/use_case.rs:7:1
  |
7 | struct TupleEmpty();
  | ^^^^^^^^^^^^^^^^^^^^

error: derive-where doesn't support empty items, as this can already be handled by standard `#[derive(..)]`
  --> tests/ui/use_case.rs:10:1
   |
10 | struct Unit;
   | ^^^^^^^^^^^^

error: derive-where doesn't support empty items, as this can already be handled by standard `#[derive(..)]`
  --> tests/ui/use_case.rs:13:1
   |
13 | struct UnionEmpty {}
   | ^^^^^^^^^^^^^^^^^^^^

error: this can be handled by standard `#[derive(..)]`, use a `skip` attribute, implement `Default` on an enum, of different generic type parameters
  --> tests/ui/use_case.rs:15:16
   |
15 | #[derive_where(Clone)]
   |                ^^^^^

error: this can be handled by standard `#[derive(..)]`, use a `skip` attribute, implement `Default` on an enum, of different generic type parameters
  --> tests/ui/use_case.rs:18:16
   |
18 | #[derive_where(Clone)]
   |                ^^^^^

error: this can be handled by standard `#[derive(..)]`, use a `skip` attribute, implement `Default` on an enum, of different generic type parameters
  --> tests/ui/use_case.rs:23:16
   |
23 | #[derive_where(Clone; T)]
   |                ^^^^^

error: this can be handled by standard `#[derive(..)]`, use a `skip` attribute, implement `Default` on an enum, of different generic type parameters
  --> tests/ui/use_case.rs:26:16
   |
26 | #[derive_where(Clone, Debug; T)]
   |                ^^^^^

error: this can be handled by standard `#[derive(..)]`, use a `skip` attribute, implement `Default` on an enum, of different generic type parameters
  --> tests/ui/use_case.rs:30:16
   |
30 | #[derive_where(Clone, Default; T)]
   |                ^^^^^
