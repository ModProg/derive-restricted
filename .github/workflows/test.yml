name: Test

on:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    name: Build & Test

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rust:
          - { version: 1.57.0, msrv: true }
          - { version: stable, msrv: false }
          - { version: nightly, msrv: false }
        features:
          - ""
          - --features safe
          - --features zeroize
          - --features zeroize-on-drop
          - --features safe,zeroize
          - --features safe,zeroize-on-drop
        include:
          - rust: { version: nightly, msrv: false }
            features: --features nightly
          - rust: { version: nightly, msrv: false }
            features: --features safe,nightly
          - rust: { version: nightly, msrv: false }
            features: --features nightly,zeroize
          - rust: { version: nightly, msrv: false }
            features: --features nightly,zeroize-on-drop
          - rust: { version: nightly, msrv: false }
            features: --all-features

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.rust.version }} --profile minimal --allow-downgrade
          rustup default ${{ matrix.rust.version }}
      - name: Pin `zeroize` for MSRV
        if: matrix.rust.msrv
        run:
          cargo update -p zeroize --precise 1.6.0
      - name: Build
        run:
          cargo build --workspace ${{ matrix.features }}
      - name: Test
        run:
          cargo test --workspace ${{ matrix.features }} --all-targets --no-fail-fast
      - name: Doc Test
        run:
          cargo test --workspace ${{ matrix.features }} --doc --no-fail-fast

  no-std-build:
    name: no_std Build

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rust:
          - { version: 1.57.0, msrv: true }
          - { version: stable, msrv: false }
          - { version: nightly, msrv: false }
        features:
          - ""
          - --features safe
          - --features zeroize
          - --features zeroize-on-drop
          - --features safe,zeroize
          - --features safe,zeroize-on-drop
        include:
          - rust: { version: nightly, msrv: false }
            features: --features nightly
          - rust: { version: nightly, msrv: false }
            features: --features safe,nightly
          - rust: { version: nightly, msrv: false }
            features: --features nightly,zeroize
          - rust: { version: nightly, msrv: false }
            features: --features nightly,zeroize-on-drop
          - rust: { version: nightly, msrv: false }
            features: --all-features

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.rust.version }} --target thumbv6m-none-eabi --profile minimal --allow-downgrade
          rustup default ${{ matrix.rust.version }}
      - name: Pin `zeroize` for MSRV
        if: matrix.rust.msrv
        run:
          cargo update -p zeroize --precise 1.6.0
      - name: Build
        run:
          cargo build --target thumbv6m-none-eabi ${{ matrix.features }} -p ensure-no-std

  minimal-versions:
    name: Minimal Versions

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rust:
          - version: 1.57.0
            features: safe,zeroize-on-drop
          - version: stable
            features: safe,zeroize-on-drop

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.rust.version }} --profile minimal --allow-downgrade
          rustup default ${{ matrix.rust.version }}
      - name: Install nightly Rust
        run:
          rustup toolchain install nightly --profile minimal --allow-downgrade
      - name: Build
        working-directory: test-crates/minimal-versions
        run: |
          cargo +nightly update -Z minimal-versions
          cargo build --features ${{ matrix.rust.features }}
